if __name__ == "__main__":
    from PIL import Image, ImageOps
    import tkinter as tk
    from tkinter import filedialog
    import os

    # Open a file in Finder with tkinter
    def process_image():
        def select_file():
            file_path = filedialog.askopenfilename()
            if file_path:
                print("Selected file:", file_path)
            else:
                print("No file selected")

        root = tk.Tk()
        root.withdraw()  # Hide the main tkinter window

        file_path = filedialog.askopenfilename()
        if file_path:
            print("Selected file:", file_path)
            img = Image.open(file_path)
        else:
            print("No file selected")
            quit()

        # Gather desired size and current dpi.
        print_width = float(input("Print width (inches): "))
        print_height = float(input("Print height (inches): "))
        border_size = float(input("Border size (inches): "))
        dpi = img.info.get('dpi', (72,72))

        # Calculate the required changes.
        border_pixels_hor = int(border_size * dpi[0])
        border_pixels_vert = int(border_size * dpi[1])
        pixels_width_total = int(print_width * dpi[0])
        pixels_height_total = int(print_height * dpi[1])
        image_width = int(pixels_width_total - (2 * border_pixels_hor))
        image_height = int(pixels_height_total - (2 * border_pixels_vert))
        #print(f"border_pixels: ({border_pixels_hor}, {border_pixels_vert}), image width: {image_width}, image height: {image_height}")

        # Make required changes.
        img = img.resize((image_width, image_height))
        if border_pixels_hor != border_pixels_vert:
            print("Cannot add border because dpi varies horizontally and vertically.")
        else:
            img = ImageOps.expand(img, border=border_pixels_hor, fill='white')

        # Save the image.
        img_name = os.path.basename(file_path)
        save_path = f"/Users/joshbradley/Desktop/Claire Art Scans/Not Ready for Printing/Generated by Automation/{img_name}"
        img.save(save_path, 'PNG', dpi=dpi)

        # Give user the option to repeat the process.
        again = input("Another image? (y/n): ")
        if again == "y":
            process_image()

    process_image()
